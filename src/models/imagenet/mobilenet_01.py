import torch.nn as nn
__all__ = ['mobilenet_01']
class MobileNet(nn.Module):
	def __init__(self, num_classes=1000):
		super(MobileNet, self).__init__()
		self.conv1 = nn.Conv2d(3, 17, kernel_size=3, stride=2, padding=1, bias=False)
		self.bn1 = nn.BatchNorm2d(17)
		self.conv2 = nn.Conv2d(17, 17, kernel_size=3, stride=1, padding=1, bias=False, groups=17)
		self.bn2 = nn.BatchNorm2d(17)
		self.conv3 = nn.Conv2d(17, 63, kernel_size=1, stride=1, padding=0, bias=False)
		self.bn3 = nn.BatchNorm2d(63)
		self.conv4 = nn.Conv2d(63, 63, kernel_size=3, stride=2, padding=1, bias=False, groups=63)
		self.bn4 = nn.BatchNorm2d(63)
		self.conv5 = nn.Conv2d(63, 124, kernel_size=1, stride=1, padding=0, bias=False)
		self.bn5 = nn.BatchNorm2d(124)
		self.conv6 = nn.Conv2d(124, 124, kernel_size=3, stride=1, padding=1, bias=False, groups=124)
		self.bn6 = nn.BatchNorm2d(124)
		self.conv7 = nn.Conv2d(124, 124, kernel_size=1, stride=1, padding=0, bias=False)
		self.bn7 = nn.BatchNorm2d(124)
		self.conv8 = nn.Conv2d(124, 124, kernel_size=3, stride=2, padding=1, bias=False, groups=124)
		self.bn8 = nn.BatchNorm2d(124)
		self.conv9 = nn.Conv2d(124, 243, kernel_size=1, stride=1, padding=0, bias=False)
		self.bn9 = nn.BatchNorm2d(243)
		self.conv10 = nn.Conv2d(243, 243, kernel_size=3, stride=1, padding=1, bias=False, groups=243)
		self.bn10 = nn.BatchNorm2d(243)
		self.conv11 = nn.Conv2d(243, 201, kernel_size=1, stride=1, padding=0, bias=False)
		self.bn11 = nn.BatchNorm2d(201)
		self.conv12 = nn.Conv2d(201, 201, kernel_size=3, stride=2, padding=1, bias=False, groups=201)
		self.bn12 = nn.BatchNorm2d(201)
		self.conv13 = nn.Conv2d(201, 481, kernel_size=1, stride=1, padding=0, bias=False)
		self.bn13 = nn.BatchNorm2d(481)
		self.conv14 = nn.Conv2d(481, 481, kernel_size=3, stride=1, padding=1, bias=False, groups=481)
		self.bn14 = nn.BatchNorm2d(481)
		self.conv15 = nn.Conv2d(481, 402, kernel_size=1, stride=1, padding=0, bias=False)
		self.bn15 = nn.BatchNorm2d(402)
		self.conv16 = nn.Conv2d(402, 402, kernel_size=3, stride=1, padding=1, bias=False, groups=402)
		self.bn16 = nn.BatchNorm2d(402)
		self.conv17 = nn.Conv2d(402, 382, kernel_size=1, stride=1, padding=0, bias=False)
		self.bn17 = nn.BatchNorm2d(382)
		self.conv18 = nn.Conv2d(382, 382, kernel_size=3, stride=1, padding=1, bias=False, groups=382)
		self.bn18 = nn.BatchNorm2d(382)
		self.conv19 = nn.Conv2d(382, 365, kernel_size=1, stride=1, padding=0, bias=False)
		self.bn19 = nn.BatchNorm2d(365)
		self.conv20 = nn.Conv2d(365, 365, kernel_size=3, stride=1, padding=1, bias=False, groups=365)
		self.bn20 = nn.BatchNorm2d(365)
		self.conv21 = nn.Conv2d(365, 389, kernel_size=1, stride=1, padding=0, bias=False)
		self.bn21 = nn.BatchNorm2d(389)
		self.conv22 = nn.Conv2d(389, 389, kernel_size=3, stride=1, padding=1, bias=False, groups=389)
		self.bn22 = nn.BatchNorm2d(389)
		self.conv23 = nn.Conv2d(389, 451, kernel_size=1, stride=1, padding=0, bias=False)
		self.bn23 = nn.BatchNorm2d(451)
		self.conv24 = nn.Conv2d(451, 451, kernel_size=3, stride=2, padding=1, bias=False, groups=451)
		self.bn24 = nn.BatchNorm2d(451)
		self.conv25 = nn.Conv2d(451, 479, kernel_size=1, stride=1, padding=0, bias=False)
		self.bn25 = nn.BatchNorm2d(479)
		self.conv26 = nn.Conv2d(479, 479, kernel_size=3, stride=1, padding=1, bias=False, groups=479)
		self.bn26 = nn.BatchNorm2d(479)
		self.conv27 = nn.Conv2d(479, 906, kernel_size=1, stride=1, padding=0, bias=False)
		self.bn27 = nn.BatchNorm2d(906)
		self.avgpool = nn.AvgPool2d(7)
		self.relu = nn.ReLU(inplace=True)
		self.fc = nn.Linear(906, num_classes)
	def forward(self, x):
		x = self.conv1(x)
		x = self.bn1(x)
		x = self.relu(x)
		x = self.conv2(x)
		x = self.bn2(x)
		x = self.relu(x)
		x = self.conv3(x)
		x = self.bn3(x)
		x = self.relu(x)
		x = self.conv4(x)
		x = self.bn4(x)
		x = self.relu(x)
		x = self.conv5(x)
		x = self.bn5(x)
		x = self.relu(x)
		x = self.conv6(x)
		x = self.bn6(x)
		x = self.relu(x)
		x = self.conv7(x)
		x = self.bn7(x)
		x = self.relu(x)
		x = self.conv8(x)
		x = self.bn8(x)
		x = self.relu(x)
		x = self.conv9(x)
		x = self.bn9(x)
		x = self.relu(x)
		x = self.conv10(x)
		x = self.bn10(x)
		x = self.relu(x)
		x = self.conv11(x)
		x = self.bn11(x)
		x = self.relu(x)
		x = self.conv12(x)
		x = self.bn12(x)
		x = self.relu(x)
		x = self.conv13(x)
		x = self.bn13(x)
		x = self.relu(x)
		x = self.conv14(x)
		x = self.bn14(x)
		x = self.relu(x)
		x = self.conv15(x)
		x = self.bn15(x)
		x = self.relu(x)
		x = self.conv16(x)
		x = self.bn16(x)
		x = self.relu(x)
		x = self.conv17(x)
		x = self.bn17(x)
		x = self.relu(x)
		x = self.conv18(x)
		x = self.bn18(x)
		x = self.relu(x)
		x = self.conv19(x)
		x = self.bn19(x)
		x = self.relu(x)
		x = self.conv20(x)
		x = self.bn20(x)
		x = self.relu(x)
		x = self.conv21(x)
		x = self.bn21(x)
		x = self.relu(x)
		x = self.conv22(x)
		x = self.bn22(x)
		x = self.relu(x)
		x = self.conv23(x)
		x = self.bn23(x)
		x = self.relu(x)
		x = self.conv24(x)
		x = self.bn24(x)
		x = self.relu(x)
		x = self.conv25(x)
		x = self.bn25(x)
		x = self.relu(x)
		x = self.conv26(x)
		x = self.bn26(x)
		x = self.relu(x)
		x = self.conv27(x)
		x = self.bn27(x)
		x = self.relu(x)
		x = self.avgpool(x)
		x = x.view(-1, x.size(1))
		x = self.fc(x)
		return x
def mobilenet_01(**kwargs):
	model = MobileNet(**kwargs)
	return model
